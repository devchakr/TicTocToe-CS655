@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "project.TicTacToeModelEngineTest",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1984153269 { 
   	label=service
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_314490297 { 
   	label=impl
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   BuilderPatternImpl1821102482[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BuilderPatternImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   gameBoard: char[][] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ gameBoardMaker()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

subgraph cluster_309310695 { 
   	label=project
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   GameManager309310695[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GameManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   builderPattern: BuilderPattern [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ buildGame()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TicTacToeModel309310695[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TicTacToeModel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   gameBoard: char[][] [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ display()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getGrid(row: int, col: int): char</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TicTacToeModelEngineTest309310695[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TicTacToeModelEngineTest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ testAttemptInvalidMove()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testChangePlayerAfterValidMove()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testCompleteDrawGame()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testDraw()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testIllegalCoordinates()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testOWinningScenario()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testSequentialMoves()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testWinningDiagonalFromTopLeft()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testWinningVerticalColumn()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testXVictoryTopRow()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpdateNotifierImpl309310695[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpdateNotifierImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   builderPattern: BuilderPattern [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   currentPlayer: char [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gameManager: GameManager [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isGameOver: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ticTacToeModel: TicTacToeModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   updateNotifiers: List&lt;UpdateNotifier&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addListener(notifiers: UpdateNotifier)</TD></TR>
<TR><TD ALIGN="LEFT" ># checkForWin(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >- checkGameStatus()</TD></TR>
<TR><TD ALIGN="LEFT" >- notifyListeners(result: BoardRES)</TD></TR>
<TR><TD ALIGN="LEFT" >+ notifyUpdate(gameActionEvent: GameActionEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeListener(listener: UpdateNotifier)</TD></TR>
<TR><TD ALIGN="LEFT" >+ startGame(row: int, col: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
UpdateNotifierImpl309310695 -> BuilderPatternImpl1821102482[arrowhead=none];
UpdateNotifierImpl309310695 -> GameManager309310695[label="gameManager
[0..1]"];
UpdateNotifierImpl309310695 -> TicTacToeModel309310695[label="ticTacToeModel
[0..1]"];
    
}
@enduml